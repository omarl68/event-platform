openapi: 3.0.0
info:
  title: Auth API
  version: 1.0.0
  description: API documentation for authentication endpoints

paths:
  /api/login:
    post:
      tags:
        - Auth
      summary: Login
      description: Authenticates a user and returns a token and user info
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Login Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginSuccess'
        '400':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: No user found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/register:
    post:
      tags:
        - Auth
      summary: Register
      description: Registers a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterSuccess'
        '400':
          description: Validation error or duplicate email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    UserLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
    UserRegister:
      type: object
      required:
        - firstName
        - lastName
        - email
        - password
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
    LoginSuccess:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: object
          properties:
            token:
              type: string
            user:
              type: object
              properties:
                id:
                  type: string
                email:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                createdAt:
                  type: string
                updatedAt:
                  type: string
    RegisterSuccess:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: object
          properties:
            id:
              type: string
            email:
              type: string
            firstName:
              type: string
            lastName:
              type: string
            createdAt:
              type: string
            updatedAt:
              type: string
    Error:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        statusCode:
          type: integer
