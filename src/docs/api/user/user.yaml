openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
  description: API documentation for user endpoints

paths:
  /api/profile:
    get:
      tags:
        - User
      summary: Get user profile
      description: Returns the profile of the authenticated user
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /api/profile-update:
    put:
      tags:
        - User
      summary: Update user profile
      description: Updates the profile of the authenticated user
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /api/profile-password-update:
    put:
      tags:
        - User
      summary: Update user password
      description: Updates the password of the authenticated user
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserPassword'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /api/users:
    get:
      tags:
        - User
      summary: Get all users
      description: Returns a list of all users
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          default: 1
        - in: query
          name: pageSize
          schema:
            type: integer
          default: 10
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
    post:
      tags:
        - User
      summary: Create user
      description: Creates a new user
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /api/users/{id}:
    get:
      tags:
        - User
      summary: Get user by ID
      description: Returns a user by their ID
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
    put:
      tags:
        - User
      summary: Update user
      description: Updates a user by their ID
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
    delete:
      tags:
        - User
      summary: Delete user
      description: Deletes a user by their ID
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    UpdateUser:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
    UpdateUserPassword:
      type: object
      properties:
        oldPassword:
          type: string
        password:
          type: string
        confirmPassword:
          type: string
    UserRegister:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
    Success:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: object
